#!/usr/bin/expect --
# Convert DRW files (in "evacuate" format) to PNGs, using an ITS machine.

# If 1: copy the file over, copy the result back, convert. Slow.
# If 0: the files are already uploaded; giving the argument abcd/foo.drw
# will convert ABCD; FOO DRW to ABCD; FOO HARSCN.
set use_ftp 0

# An ITS machine, reachable over telnet and FTP.
set machine "dd"

# ITS's FTP server doesn't support very many commands.
# And it does something when closing the data connection that lftp
# doesn't like very much...
set lftpopts "set ftp:passive-mode false"
append lftpopts ";set ftp:ssl-allow false"
append lftpopts ";set ftp:use-feat false"
append lftpopts ";set ftp:use-mdtm false"
append lftpopts ";set ftp:use-size false"
append lftpopts ";set ftp:use-site-utime false"
append lftpopts ";set ftp:use-site-utime2 false"
append lftpopts ";debug"

send_user "\n=== Logging in ===\n"
spawn telnet $machine
expect "Fair Share = *%"
send ":login drwpng\r"
expect {
    "Detached Tree-- " {
        send " "
        sleep 2
        send "\032"
        sleep 2
        send ":massacre\r"
        send ":vk\r"
    }
    "To see system"
}
expect "\r"
send ":vk\r"
expect -ex "*"

foreach drwfn $argv {
    set itsfn [string map {"." " "} [file tail $drwfn]]
    set itsscan [string map {".drw" " harscn"} [file tail $drwfn]]
    if $use_ftp {
        # Work in .TEMP.;.
        set libdir ".temp."
    } else {
        # Assume the source files are there already.
        set srcdir [file tail [file dirname $drwfn]]
        set libdir $srcdir
        set itsfn "$srcdir;$itsfn"

        # Copy HARSCN back to a new directory.
        set outdir "x"
        append outdir [string range $srcdir 1 end]
        send ":print $outdir;..new. (udir)\r"
        expect -ex "FILE NOT FOUND"
        set itsscan "$outdir;$itsscan"
    }

    if $use_ftp {
        set pngfn "$drwfn.png"
        if [file exists $pngfn] {
            send_user "\n=== $drwfn already converted ===\n"
            continue
        }

        send_user "\n=== Uploading $drwfn as $itsfn ===\n"
        set tmpfn "/tmp/drwpng.tmp"
        system "wfconv -uh <$drwfn >$tmpfn"
        system "lftp drwpng:@$machine -e '$lftpopts; put -E $tmpfn -o \".temp.;$itsfn\"; quit'"
    }

    if [string equal $itsfn "bodies drw"] {
# eclbod drw
        send_user "\n=== This is a bodies file, not converting ===\n"
        continue
    }

    send_user "\n=== Running SUDS ===\n"
    send ":d\r"
    expect -ex "*"
    send "\003i"
    expect -ex "FILENAME?"
    send "$itsfn\r"

    set bad 0
    while 1 {
        expect {
            #   LIBRARY F;BODIES DRW, ILLEGAL PPN.
            # LIKE TO TRY ANOTHER LIBRARY FILENAME?
            -re "LIBRARY .*;(.*), (ILLEGAL|FILE NOT).*FILENAME\?" {
                # Try in the same directory as the source.
                send "$libdir;$expect_out(1,string)\r"
            }
            # SHALL I REPLACE "H106"  WITH "H106" .TEMP.;BODIES DRW?
            -re "SHALL I REPLACE.*\?" {
                send "y\r"
            }
            # OLD PIN ID 15=
            -re "OLD PIN ID (.*)=" {
                send "$expect_out(1,string)\r"
            }
            # INPUT ERROR.
            # SHALL I CLOSE THE FILE AND RETURN(Y OR NO)?
            -ex "SHALL I CLOSE THE FILE AND RETURN(Y OR NO)?" {
                set bad 1
                break
            }
            -ex "*" {
                # Success!
                break
            }
        }
    }
    if $bad {
        send_user "\n=== SUDS failed for $drwfn ===\n"
        send "\032"
        expect -ex ")"
        send ":kill\r"
        expect -ex "*"
        continue
    }

    send "\006w"
    expect -ex "PLOT FILENAME?"
    send ".temp.;drwpng plt\r"
    expect -ex "*"
    send "\032"
    expect -ex ")"
    send ":kill\r"
    expect -ex "*"
    if $use_ftp {
        send ":delete $itsfn\r"
        expect -ex "*"
    }

    send_user "\n=== Running SCNV ===\n"
    send ":cwd .temp.\r"
    expect -ex "*"
    send ":scnv\r"
    expect -ex "SCNV FINISHED"
    expect -ex "*"
    send ":kill\r"
    expect -ex "*"

    send_user "\n=== Running VERSA ===\n"
    send ":versa 1 scn\r"
    expect -ex "*"
    send ":delete 1 scn\r"
    expect -ex "*"

    if $use_ftp {
        send_user "\n=== Downloading image ===\n"
        send ":delete harscn newest\r"
        expect {
            -ex "FILE NOT FOUND" {}
            -ex "*" {}
        }
        send ":rename harscn >,harscn newest\r"
        expect -ex "*"
        system "lftp drwpng:@$machine -e '$lftpopts; get -E \".temp.;harscn newest\" -o $tmpfn; quit'"
        system "harscntopbm -Wbin $tmpfn | pnmflip -r180 | pnmtopng >$pngfn"
    } else {
        send ":copy harscn >,$itsscan\r"
        expect -ex "*"
        send ":delete harscn >\r"
        expect -ex "*"
    }
}

send_user "\n=== Logging out --\n"
send ":massacre\r"
expect -ex "*"
send ":logout\r"
expect "Console * Free."
send "\035"
expect "telnet> "
send "quit\r"
expect eof
